/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Npc as PrismaNpc } from "@prisma/client";

export class NpcServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.NpcCountArgs, "select">): Promise<number> {
    return this.prisma.npc.count(args);
  }

  async npcs(args: Prisma.NpcFindManyArgs): Promise<PrismaNpc[]> {
    return this.prisma.npc.findMany(args);
  }
  async npc(args: Prisma.NpcFindUniqueArgs): Promise<PrismaNpc | null> {
    return this.prisma.npc.findUnique(args);
  }
  async createNpc(args: Prisma.NpcCreateArgs): Promise<PrismaNpc> {
    return this.prisma.npc.create(args);
  }
  async updateNpc(args: Prisma.NpcUpdateArgs): Promise<PrismaNpc> {
    return this.prisma.npc.update(args);
  }
  async deleteNpc(args: Prisma.NpcDeleteArgs): Promise<PrismaNpc> {
    return this.prisma.npc.delete(args);
  }
}
