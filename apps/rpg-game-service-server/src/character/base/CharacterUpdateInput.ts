/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  Min,
  Max,
  IsOptional,
  ValidateNested,
  IsString,
  MaxLength,
} from "class-validator";
import { FieldModelWhereUniqueInput } from "../../fieldModel/base/FieldModelWhereUniqueInput";
import { Type } from "class-transformer";
import { InventoryUpdateManyWithoutCharactersInput } from "./InventoryUpdateManyWithoutCharactersInput";
import { StatusUpdateManyWithoutCharactersInput } from "./StatusUpdateManyWithoutCharactersInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class CharacterUpdateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  experience?: number | null;

  @ApiProperty({
    required: false,
    type: () => FieldModelWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => FieldModelWhereUniqueInput)
  @IsOptional()
  @Field(() => FieldModelWhereUniqueInput, {
    nullable: true,
  })
  fieldField?: FieldModelWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  hp?: number | null;

  @ApiProperty({
    required: false,
    type: () => InventoryUpdateManyWithoutCharactersInput,
  })
  @ValidateNested()
  @Type(() => InventoryUpdateManyWithoutCharactersInput)
  @IsOptional()
  @Field(() => InventoryUpdateManyWithoutCharactersInput, {
    nullable: true,
  })
  inventories?: InventoryUpdateManyWithoutCharactersInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  level?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => StatusUpdateManyWithoutCharactersInput,
  })
  @ValidateNested()
  @Type(() => StatusUpdateManyWithoutCharactersInput)
  @IsOptional()
  @Field(() => StatusUpdateManyWithoutCharactersInput, {
    nullable: true,
  })
  statuses?: StatusUpdateManyWithoutCharactersInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { CharacterUpdateInput as CharacterUpdateInput };
