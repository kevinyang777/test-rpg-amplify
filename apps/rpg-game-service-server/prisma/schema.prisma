datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Status {
  agility      Int?
  character    Character? @relation(fields: [characterId], references: [id])
  characterId  String?
  createdAt    DateTime   @default(now())
  id           String     @id @default(cuid())
  intelligence Int?
  strength     Int?
  updatedAt    DateTime   @updatedAt
}

model Character {
  createdAt    DateTime    @default(now())
  experience   Int?
  fieldField   FieldModel? @relation(fields: [fieldFieldId], references: [id])
  fieldFieldId String?
  hp           Int?
  id           String      @id @default(cuid())
  inventories  Inventory[]
  level        Int?
  name         String?
  statuses     Status[]
  updatedAt    DateTime    @updatedAt
  user         User?       @relation(fields: [userId], references: [id])
  userId       String?
}

model Monster {
  createdAt        DateTime    @default(now())
  experienceReward Int?
  fieldField       FieldModel? @relation(fields: [fieldFieldId], references: [id])
  fieldFieldId     String?
  hp               Int?
  id               String      @id @default(cuid())
  level            Int?
  name             String?
  updatedAt        DateTime    @updatedAt
}

model User {
  characters Character[]
  createdAt  DateTime    @default(now())
  email      String?     @unique
  firstName  String?
  id         String      @id @default(cuid())
  lastName   String?
  password   String
  roles      Json
  updatedAt  DateTime    @updatedAt
  username   String      @unique
}

model FieldModel {
  characters  Character[]
  createdAt   DateTime    @default(now())
  description String?
  id          String      @id @default(cuid())
  monsters    Monster[]
  name        String?
  updatedAt   DateTime    @updatedAt
}

model Npc {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  name      String?
  updatedAt DateTime @updatedAt
}

model Inventory {
  character   Character? @relation(fields: [characterId], references: [id])
  characterId String?
  createdAt   DateTime   @default(now())
  id          String     @id @default(cuid())
  item        Item?      @relation(fields: [itemId], references: [id])
  itemId      String?
  updatedAt   DateTime   @updatedAt
}

model Item {
  createdAt   DateTime    @default(now())
  description String?
  id          String      @id @default(cuid())
  inventories Inventory[]
  name        String?
  updatedAt   DateTime    @updatedAt
  value       Int?
}
